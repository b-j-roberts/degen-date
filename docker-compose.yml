version: "3"

services:
  redis:
    image: redis:7.2.4-alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server
    volumes:
      - redis:/data
  postgres:
    image: postgres:14.11-alpine
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./backend/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=degen-date-user
      - POSTGRES_DB=degen-date-db
  backend:
    build:
      dockerfile: backend/Dockerfile
      context: .
    ports:
      - 8080:8080
    links:
      - redis
      - postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
  consumer:
    build:
      dockerfile: backend/Dockerfile.consumer
      context: .
    ports:
      - 8081:8081
    links:
      - redis
      - postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8081"]
        interval: 5s
        timeout: 20s
        retries: 5
  indexer:
    build:
      dockerfile: indexer/Dockerfile
      context: .
    links:
      - backend
    environment:
      - APIBARA_STREAM_URL=http://https://sepolia.starknet.a5a.ch
      - AUTH_TOKEN=dna_4LKA9wQqELJnQOm8xb5y
      - CONSUMER_TARGET_URL=http://degen-date-consumer-1:8081/consume-indexer-msg
      - PERSIST_TO_REDIS=redis://degen-date-redis-1:6379
      - INDEXER_ID=degen-date-indexer-id
    volumes:
      - configs:/configs
    restart: on-failure
    depends_on:
      - consumer
  frontend:
    build:
      dockerfile: interface/Dockerfile
      context: .
    ports:
      - 3000:3000
    links:
      - backend
    volumes:
      - ./interface/package.json:/app/package.json
      - ./interface/yarn.lock:/app/yarn.lock
      - ./interface/public/:/app/public
      - ./interface/src:/app/src

volumes:
  redis:
  postgres:
  apibara:
  configs:

